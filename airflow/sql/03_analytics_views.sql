CREATE TABLE IF NOT EXISTS PORTFOLIO.ANALYTICS.DIM_SYMBOL (
  SYMBOL STRING PRIMARY KEY,
  COMPANY_NAME STRING,
  CURRENCY STRING
);

CREATE OR REPLACE TABLE PORTFOLIO.ANALYTICS.FACT_PRICES AS
WITH fx_usd_gbp AS (
    SELECT DATE, RATE AS USD_TO_GBP
    FROM PORTFOLIO.RAW.FX_DAILY
    WHERE PAIR = 'USDGBP'
),
equities_with_fx AS (
    SELECT 
        e.SYMBOL,
        e.DATE,
        e.OPEN,
        e.HIGH,
        e.LOW,
        e.CLOSE,
        e.VOLUME,
        s.COMPANY_NAME,
        s.CURRENCY,
        fx.USD_TO_GBP
    FROM PORTFOLIO.RAW.EQUITY_DAILY e
    LEFT JOIN fx_usd_gbp fx ON e.DATE = fx.DATE
    LEFT JOIN PORTFOLIO.ANALYTICS.DIM_SYMBOL s ON e.SYMBOL = s.SYMBOL
),
calc AS (
    SELECT
        SYMBOL,
        DATE,
        COMPANY_NAME,
        CURRENCY,
        OPEN,
        HIGH,
        LOW,
        CLOSE,
        VOLUME,
        USD_TO_GBP,
        CLOSE * USD_TO_GBP AS CLOSE_GBP,
        (CLOSE - LAG(CLOSE) OVER(PARTITION BY SYMBOL ORDER BY DATE))
            / LAG(CLOSE) OVER(PARTITION BY SYMBOL ORDER BY DATE) AS DAILY_RETURN,
        AVG(CLOSE) OVER (
            PARTITION BY SYMBOL ORDER BY DATE 
            ROWS BETWEEN 6 PRECEDING AND CURRENT ROW
        ) AS ROLLING_7D_AVG_CLOSE,
        STDDEV_SAMP(CLOSE) OVER (
            PARTITION BY SYMBOL ORDER BY DATE 
            ROWS BETWEEN 29 PRECEDING AND CURRENT ROW
        ) AS ROLLING_30D_VOLATILITY
        FROM equities_with_fx
)

SELECT * FROM calc;


