services:
  airflow-db:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      { test: ["CMD", "pg_isready", "-U", "airflow"], interval: 5s, retries: 5 }
    volumes: ["airflow-db:/var/lib/postgresql/data"]

  airflow-redis:
    image: redis:7
    healthcheck:
      { test: ["CMD", "redis-cli", "ping"], interval: 5s, retries: 5 }

  airflow-webserver:
    image: apache/airflow:2.9.3
    depends_on:
      [
        airflow-db,
        airflow-redis,
        airflow-scheduler,
        airflow-worker,
        airflow-init,
      ]
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow
    ports: ["8080:8080"]
    volumes:
      [
        "./src:/opt/airflow/src",
        "./airflow/dags:/opt/airflow/dags",
        "./airflow/plugins:/opt/airflow/plugins",
        "./airflow/logs:/opt/airflow/logs",
        "./airflow/sql:/opt/airflow/sql",
      ]
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.9.3
    depends_on: [airflow-db, airflow-redis, airflow-init]
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow
    volumes:
      [
        "./src:/opt/airflow/src",
        "./airflow/dags:/opt/airflow/dags",
        "./airflow/plugins:/opt/airflow/plugins",
        "./airflow/logs:/opt/airflow/logs",
        "./airflow/sql:/opt/airflow/sql",
      ]
    command: scheduler

  airflow-worker:
    image: apache/airflow:2.9.3
    depends_on: [airflow-db, airflow-redis, airflow-init]
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow
    volumes:
      [
        "./src:/opt/airflow/src",
        "./airflow/dags:/opt/airflow/dags",
        "./airflow/plugins:/opt/airflow/plugins",
        "./airflow/logs:/opt/airflow/logs",
        "./airflow/sql:/opt/airflow/sql",
      ]
    command: celery worker

  airflow-init:
    image: apache/airflow:2.9.3
    depends_on:
      - airflow-db
      - airflow-redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Izel --lastname Admin --role Admin --email admin@example.com
      "
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs

volumes:
  airflow-db:
